{"version":3,"file":"maptastic.js","sources":["../src/solve.js","../src/maptastic.js"],"sourcesContent":["/**\n * @fileoverview A snippet from the {@link https://github.com/sloisel/numeric | numeric} project, as it is unmaintained and doesn't export correctly.\n * @see {@link https://github.com/sloisel/numeric/blob/656fa1254be540f428710738ca9c1539625777f1/src/numeric.js#L3001-L3089 | Source}\n */\n\n/**\n * @see {@link https://github.com/sloisel/numeric/blob/master/src/numeric.js#L315-L329}\n */\nfunction _foreach2(x, s, k, f) {\n  if (k === s.length - 1) {\n    return f(x);\n  }\n  var i, n = s[k], ret = Array(n);\n  for (i = n - 1; i >= 0; i--) {\n    ret[i] = _foreach2(x[i], s, k + 1, f);\n  }\n  return ret;\n}\n\n\nfunction _dim(x) {\n  var ret = [];\n  while (typeof x === \"object\") {\n    ret.push(x.length);\n    x = x[0];\n  }\n  return ret;\n}\n\n/**\n * @see {@link https://github.com/sloisel/numeric/blob/656fa1254be540f428710738ca9c1539625777f1/src/numeric.js#L309-L329}\n * @param {*} x \n */\nfunction dim(x) {\n  var y, z;\n  if (typeof x === \"object\") {\n    y = x[0];\n    if (typeof y === \"object\") {\n      z = y[0];\n      if (typeof z === \"object\") {\n        return _dim(x);\n      }\n      return [x.length, y.length];\n    }\n    return [x.length];\n  }\n  return [];\n}\n\n\nfunction cloneV(x) {\n  var _n = x.length;\n  var i, ret = Array(_n);\n\n  for (i = _n - 1; i !== -1; --i) {\n    ret[i] = (x[i]);\n  }\n  return ret;\n}\n\nfunction clone(x) {\n  if (typeof x !== \"object\") {\n    return (x);\n  }\n  var s = dim(x);\n  return _foreach2(x, s, 0, cloneV);\n}\n\n// 11. Ax = b\n/**\n * @param {*} A \n * @param {boolean} [fast=false] \n * @returns {{ LU: *, P: * }}\n */\nfunction LU(A, fast = false) {\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length, n1 = n - 1;\n  var P = new Array(n);\n  if (!fast) {\n    A = clone(A);\n  }\n  \n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if (j === n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P: P\n  };\n}\n\nfunction LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n = LU.length;\n  var x = clone(b);\n  var P = LUP.P;\n  var Pi, LUi, tmp;\n\n  for (i = n - 1; i !== -1; --i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n}\n\nexport default function solve(A, b, fast) {\n  return LUsolve(LU(A, fast), b);\n}","import solve from './solve';\n\n/**\n * @typedef {Object} Config\n * @property {boolean} labels\n * @property {boolean} crosshairs\n * @property {boolean} screenbounds\n * @property {boolean} autoSave\n * @property {Layout[]} layers\n * @property {function(): void} onchange\n */\n\n/**\n * @typedef {(string|HTMLElement)} Target\n */\n\n/**\n * @typedef {[number, number]} Point\n */\n\n/**\n * @typedef {Object} Layout\n * @property {string} id - ID of the layer element\n * @property {Point[]} targetPoints\n * @property {Point[]} sourcePoints\n */\n\n/**\n * @typedef {Object} Layer\n * @property {Point[]} targetPoints\n * @property {Point[]} sourcePoints\n * @property {boolean} visible\n * @property {HTMLElement} element\n * @property {number} width\n * @property {number} height \n */\n\nconst has = Object.prototype.hasOwnProperty;\n\n/**\n * Get an object's property or a default if not defined.\n *\n * @template T\n * @param {*} obj \n * @param {string} key \n * @param {T} defaultVal \n * @returns {T | *} either the default value or the object's property\n */\nfunction getProp(obj, key, defaultVal) {\n  if (obj && has.call(obj, key) && (obj[key] !== null)) {\n    return obj[key];\n  } else {\n    return defaultVal;\n  }\n}\n\n\n/**\n * Compute linear distance.\n *\n * @param {number} x1 \n * @param {number} y1 \n * @param {number} x2 \n * @param {number} y2 \n * @returns {number}\n */\nfunction distanceTo(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n}\n\n/**\n * Determine whether a {@link Point} falls within a triangle.\n * \n * @param {Point} point \n * @param {Point} a \n * @param {Point} b \n * @param {Point} c\n * @returns {boolean} \n */\nfunction pointInTriangle(point, a, b, c) {\n  let s = a[1] * c[0] - a[0] * c[1] + (c[1] - a[1]) * point[0] + (a[0] - c[0]) * point[1];\n  let t = a[0] * b[1] - a[1] * b[0] + (a[1] - b[1]) * point[0] + (b[0] - a[0]) * point[1];\n\n  if ((s < 0) != (t < 0)) {\n    return false;\n  }\n\n  let A = -b[1] * c[0] + a[1] * (c[0] - b[0]) + a[0] * (b[1] - c[1]) + b[0] * c[1];\n  if (A < 0.0) {\n    s = -s;\n    t = -t;\n    A = -A;\n  }\n\n  return s > 0 && t > 0 && (s + t) < A;\n}\n\n/**\n * Swap two points in a given list of points. Mutates `layerPoints`.\n *\n * @param {Point[]} layerPoints \n * @param {number} index1 \n * @param {number} index2 \n */\nfunction swapLayerPoints(layerPoints, index1, index2) {\n  const tx = layerPoints[index1][0];\n  const ty = layerPoints[index1][1];\n  layerPoints[index1][0] = layerPoints[index2][0];\n  layerPoints[index1][1] = layerPoints[index2][1];\n  layerPoints[index2][0] = tx;\n  layerPoints[index2][1] = ty;\n}\n\n/**\n * Determine if a point is inside a layer quad.\n * \n * @param {Point} point \n * @param {Layer} layer \n */\nfunction pointInLayer(point, layer) {\n  const a = pointInTriangle(point, layer.targetPoints[0], layer.targetPoints[1], layer.targetPoints[2]);\n  const b = pointInTriangle(point, layer.targetPoints[3], layer.targetPoints[0], layer.targetPoints[2]);\n  return a || b;\n}\n\n/**\n * Rotate a {@link Layout}. Mutates `layer`.\n *\n * @param {Layer} layer \n * @param {number} angle \n */\nfunction rotateLayer(layer, angle) {\n  const s = Math.sin(angle);\n  const c = Math.cos(angle);\n\n  const centerPoint = [0, 0];\n  for (let p = 0; p < layer.targetPoints.length; p++) {\n    centerPoint[0] += layer.targetPoints[p][0];\n    centerPoint[1] += layer.targetPoints[p][1];\n  }\n\n  centerPoint[0] /= 4;\n  centerPoint[1] /= 4;\n\n  for (let p = 0; p < layer.targetPoints.length; p++) {\n    const px = layer.targetPoints[p][0] - centerPoint[0];\n    const py = layer.targetPoints[p][1] - centerPoint[1];\n\n    layer.targetPoints[p][0] = (px * c) - (py * s) + centerPoint[0];\n    layer.targetPoints[p][1] = (px * s) + (py * c) + centerPoint[1];\n  }\n}\n\n/**\n * Scale a {@link Layer}. Mutates `layer`.\n * \n * @param {Layer} layer \n * @param {number} scale \n */\nfunction scaleLayer(layer, scale) {\n  const centerPoint = [0, 0];\n  for (let p = 0; p < layer.targetPoints.length; p++) {\n    centerPoint[0] += layer.targetPoints[p][0];\n    centerPoint[1] += layer.targetPoints[p][1];\n  }\n\n  centerPoint[0] /= 4;\n  centerPoint[1] /= 4;\n\n  for (let p = 0; p < layer.targetPoints.length; p++) {\n    let px = layer.targetPoints[p][0] - centerPoint[0];\n    let py = layer.targetPoints[p][1] - centerPoint[1];\n\n    layer.targetPoints[p][0] = (px * scale) + centerPoint[0];\n    layer.targetPoints[p][1] = (py * scale) + centerPoint[1];\n  }\n}\n\n/**\n * Clone a list of points.\n * \n * @param {Point[]} points \n * @returns {Point[]} a new list.\n */\nfunction clonePoints(points) {\n  const clone = [];\n  for (let p = 0; p < points.length; p++) {\n    clone.push(points[p].slice(0, 2));\n  }\n  return clone;\n}\n\nclass Maptastic {\n  /**\n   * @param {Config|Target} configOrTarget\n   * @param {...Target} [targets]\n   */\n  constructor(configOrTarget, ...targets) {\n    /** @type {HTMLCanvasElement} */\n    this.canvas = null;\n    /** @type {CanvasRenderingContext2D} */\n    this.context = null;\n\n    /** @type {Layer[]} */\n    this.layers = [];\n\n    this.configActive = false;\n\n    this.dragging = false;\n    /** @type {Point} */\n    this.dragOffset = [0, 0];\n\n    this.selectedLayer = null;\n    this.selectedPoint = null;\n    this.selectionRadius = 20;\n    this.hoveringPoint = null;\n    this.hoveringLayer = null;\n    this.dragOperation = 'move';\n    this.isLayerSoloed = false;\n\n    /** @type {Point} */\n    this.mousePosition = [0, 0];\n    /** @type {Point} */\n    this.mouseDelta = [0, 0];\n    /** @type {Point} */\n    this.mouseDownPoint = [];\n\n    this.showLayerNames = getProp(configOrTarget, 'labels', true);\n    this.showCrosshairs = getProp(configOrTarget, 'crosshairs', false);\n    this.showScreenBounds = getProp(configOrTarget, 'screenbounds', false);\n    this.autoSave = getProp(configOrTarget, 'autoSave', true);\n    this.layoutChangeListener = getProp(configOrTarget, 'onchange', () => { });\n    this.localStorageKey = 'maptastic.layers';\n\n    const layerList = getProp(configOrTarget, 'layers', []);\n    // if the config was just an element or string, interpret it as a layer to add.\n    const potentialLayerTargets = layerList.concat(targets, [configOrTarget]);\n\n    for (var i = 0; i < potentialLayerTargets.length; i++) {\n      if ((potentialLayerTargets[i] instanceof HTMLElement) || (typeof (potentialLayerTargets[i]) === 'string')) {\n        this.addLayer(potentialLayerTargets[i]);\n      }\n    }\n\n    const autoLoad = getProp(configOrTarget, 'autoLoad', true);\n    if (autoLoad) {\n      this.loadSettings();\n    }\n\n    this.init();\n  }\n\n  /**\n   * Set up event listeners, canvas, and context.\n   * \n   * @private\n   */\n  init() {\n    const canvas = document.createElement('canvas');\n\n    canvas.style.display = 'none';\n    canvas.style.position = 'fixed';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style.zIndex = '1000000';\n    this.canvas = canvas;\n\n    this.context = canvas.getContext('2d');\n\n    document.body.appendChild(canvas);\n\n    window.addEventListener('resize', (event) => this.resize());\n\n    // UI events\n    window.addEventListener('mousemove', (event) => this.mouseMove(event));\n    window.addEventListener('mouseup', (event) => this.mouseUp(event));\n    window.addEventListener('mousedown', (event) => this.mouseDown(event));\n    window.addEventListener('keydown', (event) => this.keyDown(event));\n\n    this.resize();\n  }\n\n  /**\n   * @private\n   */\n  notifyChangeListener() {\n    this.layoutChangeListener();\n  }\n\n  /**\n   * @private\n   */\n  resize() {\n    const { innerWidth, innerHeight } = window;\n    this.canvas.width = innerWidth;\n    this.canvas.height = innerHeight;\n\n    this.draw();\n  }\n\n  /**\n   * @private\n   */\n  draw() {\n    if (!this.configActive) {\n      return;\n    }\n\n    this.context.strokeStyle = 'red';\n    this.context.lineWidth = 2;\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    for (let i = 0; i < this.layers.length; i++) {\n\n      if (this.layers[i].visible) {\n        this.layers[i].element.style.visibility = 'visible';\n\n        // Draw layer rectangles.\n        this.context.beginPath();\n        if (this.layers[i] === this.hoveringLayer) {\n          this.context.strokeStyle = 'red';\n        } else if (this.layers[i] === this.selectedLayer) {\n          this.context.strokeStyle = 'red';\n        } else {\n          this.context.strokeStyle = 'white';\n        }\n        this.context.moveTo(this.layers[i].targetPoints[0][0], this.layers[i].targetPoints[0][1]);\n        for (let p = 0; p < this.layers[i].targetPoints.length; p++) {\n          this.context.lineTo(this.layers[i].targetPoints[p][0], this.layers[i].targetPoints[p][1]);\n        }\n        this.context.lineTo(this.layers[i].targetPoints[3][0], this.layers[i].targetPoints[3][1]);\n        this.context.closePath();\n        this.context.stroke();\n\n        // Draw corner points.\n        const centerPoint = [0, 0];\n        for (let p = 0; p < this.layers[i].targetPoints.length; p++) {\n\n          if (this.layers[i].targetPoints[p] === this.hoveringPoint) {\n            this.context.strokeStyle = 'red';\n          } else if (this.layers[i].targetPoints[p] === this.selectedPoint) {\n            this.context.strokeStyle = 'red';\n          } else {\n            this.context.strokeStyle = 'white';\n          }\n\n          centerPoint[0] += this.layers[i].targetPoints[p][0];\n          centerPoint[1] += this.layers[i].targetPoints[p][1];\n\n          this.context.beginPath();\n          this.context.arc(\n            this.layers[i].targetPoints[p][0],\n            this.layers[i].targetPoints[p][1],\n            this.selectionRadius / 2,\n            0,\n            2 * Math.PI,\n            false\n          );\n          this.context.stroke();\n        }\n\n        // Find the average of the corner locations for an approximate center.\n        centerPoint[0] /= 4;\n        centerPoint[1] /= 4;\n\n        if (this.showLayerNames) {\n          // Draw the element ID in the center of the quad for reference.\n          const label = this.layers[i].element.id.toUpperCase();\n          this.context.font = '16px sans-serif';\n          this.context.textAlign = 'center';\n          const metrics = this.context.measureText(label);\n          const size = [metrics.width + 8, 16 + 16];\n          this.context.fillStyle = 'white';\n          this.context.fillRect(centerPoint[0] - size[0] / 2, centerPoint[1] - size[1] + 8, size[0], size[1]);\n          this.context.fillStyle = 'black';\n          this.context.fillText(label, centerPoint[0], centerPoint[1]);\n        }\n      } else {\n        this.layers[i].element.style.visibility = 'hidden';\n      }\n    }\n\n    // Draw mouse crosshairs\n    if (this.showCrosshairs) {\n      this.context.strokeStyle = 'yellow';\n      this.context.lineWidth = 1;\n\n      this.context.beginPath();\n\n      this.context.moveTo(this.mousePosition[0], 0);\n      this.context.lineTo(this.mousePosition[0], this.canvas.height);\n\n      this.context.moveTo(0, this.mousePosition[1]);\n      this.context.lineTo(this.canvas.width, this.mousePosition[1]);\n\n      this.context.stroke();\n    }\n\n    if (this.showScreenBounds) {\n\n      this.context.fillStyle = 'black';\n      this.context.lineWidth = 4;\n      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n      this.context.strokeStyle = '#909090';\n      this.context.beginPath();\n      const stepX = this.canvas.width / 10;\n      const stepY = this.canvas.height / 10;\n\n      for (let i = 0; i < 10; i++) {\n        this.context.moveTo(i * stepX, 0);\n        this.context.lineTo(i * stepX, this.canvas.height);\n\n        this.context.moveTo(0, i * stepY);\n        this.context.lineTo(this.canvas.width, i * stepY);\n      }\n      this.context.stroke();\n\n      this.context.strokeStyle = 'white';\n      this.context.strokeRect(2, 2, this.canvas.width - 4, this.canvas.height - 4);\n\n      const fontSize = Math.round(stepY * 0.6);\n      this.context.font = fontSize + 'px mono,sans-serif';\n      this.context.fillRect(stepX * 2 + 2, stepY * 3 + 2, this.canvas.width - stepX * 4 - 4, this.canvas.height - stepY * 6 - 4);\n      this.context.fillStyle = 'white';\n      this.context.fontSize = 20;\n      this.context.fillText(this.canvas.width + ' x ' + this.canvas.height, this.canvas.width / 2, this.canvas.height / 2 + (fontSize * 0.75));\n      this.context.fillText('display size', this.canvas.width / 2, this.canvas.height / 2 - (fontSize * 0.75));\n    }\n  }\n\n  updateTransform() {\n    // TODO: no reduce\n    const transform = ['', '-webkit-', '-moz-', '-ms-', '-o-'].reduce((p, v) => {\n      return v + 'transform' in document.body.style ? v : p;\n    }) + 'transform';\n    for (let l = 0; l < this.layers.length; l++) {\n\n      let a = [];\n      let b = [];\n      for (let i = 0, n = this.layers[l].sourcePoints.length; i < n; ++i) {\n        const s = this.layers[l].sourcePoints[i], t = this.layers[l].targetPoints[i];\n        a.push([s[0], s[1], 1, 0, 0, 0, -s[0] * t[0], -s[1] * t[0]]), b.push(t[0]);\n        a.push([0, 0, 0, s[0], s[1], 1, -s[0] * t[1], -s[1] * t[1]]), b.push(t[1]);\n      }\n\n      // TODO: remove dependency on numeric\n      const X = solve(a, b, true);\n      const matrix = [\n        X[0], X[3], 0, X[6],\n        X[1], X[4], 0, X[7],\n        0, 0, 1, 0,\n        X[2], X[5], 0, 1\n      ];\n\n      this.layers[l].element.style[transform] = 'matrix3d(' + matrix.join(',') + ')';\n      this.layers[l].element.style[transform + '-origin'] = '0px 0px 0px';\n    }\n  }\n\n  /**\n   * @private\n   * @param {KeyboardEvent} event \n   */\n  keyDown(event) {\n    if (!this.configActive) {\n      if (event.keyCode == 32 && event.shiftKey) {\n        this.setConfigEnabled(true);\n        return;\n      } else {\n        return;\n      }\n    }\n\n    const key = event.keyCode;\n\n    const increment = event.shiftKey ? 10 : 1;\n    let dirty = false;\n    const delta = [0, 0];\n\n    switch (key) {\n\n      case 32: // spacebar\n        if (event.shiftKey) {\n          this.setConfigEnabled(false);\n          return;\n        }\n        break;\n\n      case 37: // left arrow\n        delta[0] -= increment;\n        break;\n\n      case 38: // up arrow\n        delta[1] -= increment;\n        break;\n\n      case 39: // right arrow\n        delta[0] += increment;\n        break;\n\n      case 40: // down arrow\n        delta[1] += increment;\n        break;\n\n      case 67: // c key, toggle crosshairs\n        this.showCrosshairs = !this.showCrosshairs;\n        dirty = true;\n        break;\n\n      case 83: // s key, solo/unsolo quads\n        if (!this.isLayerSoloed) {\n\n          if (this.selectedLayer != null) {\n            for (let i = 0; i < this.layers.length; i++) {\n              this.layers[i].visible = false;\n            }\n            this.selectedLayer.visible = true;\n            dirty = true;\n            this.isLayerSoloed = true;\n          }\n        } else {\n          for (let i = 0; i < this.layers.length; i++) {\n            this.layers[i].visible = true;\n          }\n          this.isLayerSoloed = false;\n          dirty = true;\n\n        }\n        break;\n\n      case 66: // b key, toggle projector bounds rectangle.\n        this.showScreenBounds = !this.showScreenBounds;\n        this.draw();\n        break;\n\n      case 72: // h key, flip horizontal.\n        if (this.selectedLayer) {\n          swapLayerPoints(this.selectedLayer.sourcePoints, 0, 1);\n          swapLayerPoints(this.selectedLayer.sourcePoints, 3, 2);\n          this.updateTransform();\n          this.draw();\n        }\n        break;\n\n      case 86: // v key, flip vertical.\n        if (this.selectedLayer) {\n          swapLayerPoints(this.selectedLayer.sourcePoints, 0, 3);\n          swapLayerPoints(this.selectedLayer.sourcePoints, 1, 2);\n          this.updateTransform();\n          this.draw();\n        }\n        break;\n\n      case 82: // r key, rotate 90 degrees.\n        if (this.selectedLayer) {\n          rotateLayer(this.selectedLayer, Math.PI / 2);\n          //rotateLayer(selectedLayer, 0.002);\n          this.updateTransform();\n          this.draw();\n        }\n        break;\n    }\n\n    // if a layer or point is selected, add the delta amounts (set above via arrow keys)\n    if (!this.showScreenBounds) {\n      if (this.selectedPoint) {\n        this.selectedPoint[0] += delta[0];\n        this.selectedPoint[1] += delta[1];\n        dirty = true;\n      } else if (this.selectedLayer) {\n        if (event.altKey == true) {\n          rotateLayer(this.selectedLayer, delta[0] * 0.01);\n          scaleLayer(this.selectedLayer, (delta[1] * -0.005) + 1.0);\n        } else {\n          for (let i = 0; i < this.selectedLayer.targetPoints.length; i++) {\n            this.selectedLayer.targetPoints[i][0] += delta[0];\n            this.selectedLayer.targetPoints[i][1] += delta[1];\n          }\n        }\n        dirty = true;\n      }\n    }\n\n    // update the transform and redraw if needed\n    if (dirty) {\n      this.updateTransform();\n      this.draw();\n      if (this.autoSave) {\n        this.saveSettings();\n      }\n      this.notifyChangeListener();\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} event\n   */\n  mouseMove(event) {\n    if (!this.configActive) {\n      return;\n    }\n\n    event.preventDefault();\n\n    this.mouseDelta[0] = event.clientX - this.mousePosition[0];\n    this.mouseDelta[1] = event.clientY - this.mousePosition[1];\n\n    this.mousePosition[0] = event.clientX;\n    this.mousePosition[1] = event.clientY;\n\n    if (this.dragging) {\n\n      const scale = event.shiftKey ? 0.1 : 1;\n\n      if (this.selectedPoint) {\n        this.selectedPoint[0] += this.mouseDelta[0] * scale;\n        this.selectedPoint[1] += this.mouseDelta[1] * scale;\n      } else if (this.selectedLayer) {\n\n        // Alt-drag to rotate and scale\n        if (event.altKey == true) {\n          rotateLayer(this.selectedLayer, this.mouseDelta[0] * (0.01 * scale));\n          scaleLayer(this.selectedLayer, (this.mouseDelta[1] * (-0.005 * scale)) + 1.0);\n        } else {\n          for (let i = 0; i < this.selectedLayer.targetPoints.length; i++) {\n            this.selectedLayer.targetPoints[i][0] += this.mouseDelta[0] * scale;\n            this.selectedLayer.targetPoints[i][1] += this.mouseDelta[1] * scale;\n          }\n        }\n      }\n\n      this.updateTransform();\n      if (this.autoSave) {\n        this.saveSettings();\n      }\n      this.draw();\n      this.notifyChangeListener();\n    } else {\n      let dirty = false;\n\n      this.canvas.style.cursor = 'default';\n      const mouseX = event.clientX;\n      const mouseY = event.clientY;\n\n      const previousState = (this.hoveringPoint != null);\n      const previousLayer = (this.hoveringLayer != null);\n\n      this.hoveringPoint = null;\n\n      for (let i = 0; i < this.layers.length; i++) {\n        let layer = this.layers[i];\n        if (layer.visible) {\n          for (let p = 0; p < layer.targetPoints.length; p++) {\n            let point = layer.targetPoints[p];\n            if (distanceTo(point[0], point[1], mouseX, mouseY) < this.selectionRadius) {\n              this.canvas.style.cursor = 'pointer';\n              this.hoveringPoint = point;\n              break;\n            }\n          }\n        }\n      }\n\n      this.hoveringLayer = null;\n      for (let i = 0; i < this.layers.length; i++) {\n        if (this.layers[i].visible && pointInLayer(this.mousePosition, this.layers[i])) {\n          this.hoveringLayer = this.layers[i];\n          break;\n        }\n      }\n\n      if (this.showCrosshairs ||\n        (previousState != (this.hoveringPoint != null)) ||\n        (previousLayer != (this.hoveringLayer != null))\n      ) {\n        this.draw();\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} event \n   */\n  mouseUp(event) {\n    if (!this.configActive) {\n      return;\n    }\n    event.preventDefault();\n\n    this.dragging = false;\n  }\n\n  /**\n   * @private\n   * @param {MouseEvent} event \n   */\n  mouseDown(event) {\n    if (!this.configActive || this.showScreenBounds) {\n      return;\n    }\n    event.preventDefault();\n\n    this.hoveringPoint = null;\n\n    if (this.hoveringLayer) {\n      this.selectedLayer = this.hoveringLayer;\n      this.dragging = true;\n    } else {\n      this.selectedLayer = null;\n    }\n\n    this.selectedPoint = null;\n\n    const mouseX = event.clientX;\n    const mouseY = event.clientY;\n\n    this.mouseDownPoint[0] = mouseX;\n    this.mouseDownPoint[1] = mouseY;\n\n    for (let i = 0; i < this.layers.length; i++) {\n      const layer = this.layers[i];\n      for (let p = 0; p < layer.targetPoints.length; p++) {\n        const point = layer.targetPoints[p];\n        if (distanceTo(point[0], point[1], mouseX, mouseY) < this.selectionRadius) {\n          this.selectedLayer = layer;\n          this.selectedPoint = point;\n          this.dragging = true;\n          this.dragOffset[0] = event.clientX - point[0];\n          this.dragOffset[1] = event.clientY - point[1];\n          //this.draw();\n          break;\n        }\n      }\n    }\n    this.draw();\n    return false;\n  }\n\n  /**\n   * Add a {@link Layer} to an HTMLElement, either by id or by reference.\n   *\n   * @private\n   * @param {string|HTMLElement} target \n   * @param {Point[]} [targetPoints] initial points for the layer\n   */\n  addLayer(target, targetPoints) {\n    /** @type {HTMLElement} */\n    let element;\n    if (typeof (target) == 'string') {\n      element = document.getElementById(target);\n      if (!element) {\n        throw new Error('Maptastic: No element found with id: ' + target);\n      }\n    } else if (target instanceof HTMLElement) {\n      element = target;\n    }\n\n    let exists = false;\n    for (var n = 0; n < this.layers.length; n++) {\n      if (this.layers[n].element.id == element.id) {\n        this.layers[n].targetPoints = clonePoints(layout[i].targetPoints);\n        exists = true;\n      }\n    }\n\n    const offsetX = element.offsetLeft;\n    const offsetY = element.offsetTop;\n\n    element.style.position = 'fixed';\n    element.style.display = 'block';\n    element.style.top = '0px';\n    element.style.left = '0px';\n    element.style.padding = '0px';\n    element.style.margin = '0px';\n\n    const layer = {\n      'visible': true,\n      'element': element,\n      'width': element.clientWidth,\n      'height': element.clientHeight,\n      'sourcePoints': [],\n      'targetPoints': []\n    };\n    layer.sourcePoints.push([0, 0], [layer.width, 0], [layer.width, layer.height], [0, layer.height]);\n\n    if (targetPoints) {\n      layer.targetPoints = clonePoints(targetPoints);\n    } else {\n      layer.targetPoints.push([0, 0], [layer.width, 0], [layer.width, layer.height], [0, layer.height]);\n      for (var i = 0; i < layer.targetPoints.length; i++) {\n        layer.targetPoints[i][0] += offsetX;\n        layer.targetPoints[i][1] += offsetY;\n      }\n    }\n\n    this.layers.push(layer);\n\n    this.updateTransform();\n  }\n\n  // Settings\n  /**\n   * Save current layout settings to local storage.\n   * \n   * @private\n   */\n  saveSettings() {\n    localStorage.setItem(this.localStorageKey, JSON.stringify(this.getLayout()));\n  }\n\n  /**\n   * Load layout settings from local storage.\n   * \n   * @private\n   */\n  loadSettings() {\n    if (!localStorage.getItem(this.localStorageKey)) {\n      return;\n    }\n    const data = JSON.parse(localStorage.getItem(this.localStorageKey));\n\n    for (let i = 0; i < data.length; i++) {\n      for (let n = 0; n < this.layers.length; n++) {\n        if (this.layers[n].element.id == data[i].id) {\n          this.layers[n].targetPoints = clonePoints(data[i].targetPoints);\n          this.layers[n].sourcePoints = clonePoints(data[i].sourcePoints);\n        }\n      }\n    }\n    this.updateTransform();\n  }\n\n  /**\n   * @private\n   * @param {boolean} enabled\n   */\n  setConfigEnabled(enabled) {\n    this.configActive = enabled;\n    this.canvas.style.display = enabled ? 'block' : 'none';\n\n    if (!enabled) {\n      this.selectedPoint = null;\n      this.selectedLayer = null;\n      this.dragging = false;\n      this.showScreenBounds = false;\n    } else {\n      this.draw();\n    }\n  }\n\n  /**\n   * @public\n   * @returns {Layout}\n   */\n  getLayout() {\n    const layout = []; // TODO: change to a map()\n    for (let i = 0; i < this.layers.length; i++) {\n      layout.push({\n        'id': this.layers[i].element.id,\n        'targetPoints': clonePoints(this.layers[i].targetPoints),\n        'sourcePoints': clonePoints(this.layers[i].sourcePoints)\n      });\n    }\n    return layout;\n  }\n\n  /**\n   * @public\n   * @param {*} layout \n   */\n  setLayout(layout) {\n    for (let i = 0; i < layout.length; i++) {\n      let exists = false;\n      for (let n = 0; n < this.layers.length; n++) {\n        if (this.layers[n].element.id == layout[i].id) {\n          console.log('Setting points.');\n          this.layers[n].targetPoints = clonePoints(layout[i].targetPoints);\n          this.layers[n].sourcePoints = clonePoints(layout[i].sourcePoints);\n          exists = true;\n        }\n      }\n\n      if (!exists) {\n        const element = document.getElementById(layout[i].id);\n        if (element) {\n          this.addLayer(element, layout[i].targetPoints);\n        } else {\n          console.log('Maptastic: Can\\'t find element: ' + layout[i].id);\n        }\n      } else {\n        console.log('Maptastic: Element \\'' + layout[i].id + '\\' is already mapped.');\n      }\n    }\n    this.updateTransform();\n    this.draw();\n  }\n}\n\nexport { Maptastic };\n"],"names":["dim","x","y","_typeof","ret","push","length","_dim","cloneV","i","_n","Array","clone","_foreach2","s","k","f","n","solve","A","b","fast","LUP","j","Pi","LUi","tmp","LU","P","LUsolve","absAjk","Akk","Ak","Pk","Ai","max","abs","Math","n1","has","Object","prototype","hasOwnProperty","getProp","obj","key","defaultVal","call","distanceTo","x1","y1","x2","y2","sqrt","pow","pointInTriangle","point","a","c","t","swapLayerPoints","layerPoints","index1","index2","tx","ty","rotateLayer","layer","angle","sin","cos","centerPoint","p","targetPoints","px","py","scaleLayer","scale","clonePoints","points","slice","configOrTarget","canvas","context","layers","configActive","dragging","dragOffset","selectedLayer","selectedPoint","selectionRadius","hoveringPoint","hoveringLayer","dragOperation","isLayerSoloed","mousePosition","mouseDelta","mouseDownPoint","showLayerNames","showCrosshairs","showScreenBounds","autoSave","layoutChangeListener","localStorageKey","layerList","targets","potentialLayerTargets","concat","HTMLElement","addLayer","loadSettings","init","document","createElement","style","display","position","top","left","zIndex","getContext","body","appendChild","window","addEventListener","event","_this","resize","mouseMove","mouseUp","mouseDown","keyDown","innerHeight","width","innerWidth","height","draw","this","strokeStyle","lineWidth","clearRect","visible","element","visibility","beginPath","moveTo","lineTo","closePath","stroke","arc","PI","label","id","toUpperCase","font","textAlign","size","measureText","fillStyle","fillRect","fillText","stepX","stepY","strokeRect","fontSize","round","transform","reduce","v","l","sourcePoints","X","join","keyCode","shiftKey","setConfigEnabled","increment","dirty","delta","updateTransform","altKey","saveSettings","notifyChangeListener","preventDefault","clientX","clientY","cursor","mouseX","mouseY","previousState","previousLayer","target","getElementById","Error","layout","offsetX","offsetLeft","offsetY","offsetTop","padding","margin","clientWidth","clientHeight","localStorage","setItem","JSON","stringify","getLayout","getItem","data","parse","enabled","exists","console","log"],"mappings":"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"}